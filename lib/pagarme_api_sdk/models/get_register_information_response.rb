# pagarme_api_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PagarmeApiSdk
  # Response object for getting an RegisterInformationResponse
  class GetRegisterInformationResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :document

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :site_url

    # TODO: Write general description for this method
    # @return [Array[GetPhoneNumberResponse]]
    attr_accessor :phone_numbers

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :mother_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :birthdate

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :monthly_income

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :professional_occupation

    # TODO: Write general description for this method
    # @return [GetRegisterInformationAddressResponse]
    attr_accessor :address

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :company_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :trading_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :annual_revenue

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :corporation_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :founding_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :cnae

    # TODO: Write general description for this method
    # @return [GetRegisterInformationAddressResponse]
    attr_accessor :main_address

    # TODO: Write general description for this method
    # @return [Array[GetManagingPartnerResponse]]
    attr_accessor :managing_partners

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['email'] = 'email'
      @_hash['document'] = 'document'
      @_hash['type'] = 'type'
      @_hash['site_url'] = 'site_url'
      @_hash['phone_numbers'] = 'phone_numbers'
      @_hash['name'] = 'name'
      @_hash['mother_name'] = 'mother_name'
      @_hash['birthdate'] = 'birthdate'
      @_hash['monthly_income'] = 'monthly_income'
      @_hash['professional_occupation'] = 'professional_occupation'
      @_hash['address'] = 'address'
      @_hash['company_name'] = 'company_name'
      @_hash['trading_name'] = 'trading_name'
      @_hash['annual_revenue'] = 'annual_revenue'
      @_hash['corporation_type'] = 'corporation_type'
      @_hash['founding_date'] = 'founding_date'
      @_hash['cnae'] = 'cnae'
      @_hash['main_address'] = 'main_address'
      @_hash['managing_partners'] = 'managing_partners'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        email
        document
        type
        site_url
        phone_numbers
        name
        mother_name
        birthdate
        monthly_income
        professional_occupation
        address
        company_name
        trading_name
        annual_revenue
        corporation_type
        founding_date
        cnae
        main_address
        managing_partners
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        email
        document
        type
        site_url
        phone_numbers
        name
        mother_name
        birthdate
        monthly_income
        professional_occupation
        address
        company_name
        trading_name
        annual_revenue
        corporation_type
        founding_date
        cnae
        main_address
        managing_partners
      ]
    end

    def initialize(email = SKIP, document = SKIP, type = SKIP, site_url = SKIP,
                   phone_numbers = SKIP, name = SKIP, mother_name = SKIP,
                   birthdate = SKIP, monthly_income = SKIP,
                   professional_occupation = SKIP, address = SKIP,
                   company_name = SKIP, trading_name = SKIP,
                   annual_revenue = SKIP, corporation_type = SKIP,
                   founding_date = SKIP, cnae = SKIP, main_address = SKIP,
                   managing_partners = SKIP)
      @email = email unless email == SKIP
      @document = document unless document == SKIP
      @type = type unless type == SKIP
      @site_url = site_url unless site_url == SKIP
      @phone_numbers = phone_numbers unless phone_numbers == SKIP
      @name = name unless name == SKIP
      @mother_name = mother_name unless mother_name == SKIP
      @birthdate = birthdate unless birthdate == SKIP
      @monthly_income = monthly_income unless monthly_income == SKIP
      @professional_occupation = professional_occupation unless professional_occupation == SKIP
      @address = address unless address == SKIP
      @company_name = company_name unless company_name == SKIP
      @trading_name = trading_name unless trading_name == SKIP
      @annual_revenue = annual_revenue unless annual_revenue == SKIP
      @corporation_type = corporation_type unless corporation_type == SKIP
      @founding_date = founding_date unless founding_date == SKIP
      @cnae = cnae unless cnae == SKIP
      @main_address = main_address unless main_address == SKIP
      @managing_partners = managing_partners unless managing_partners == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      email = hash.key?('email') ? hash['email'] : SKIP
      document = hash.key?('document') ? hash['document'] : SKIP
      type = hash.key?('type') ? hash['type'] : SKIP
      site_url = hash.key?('site_url') ? hash['site_url'] : SKIP
      # Parameter is an array, so we need to iterate through it
      phone_numbers = nil
      unless hash['phone_numbers'].nil?
        phone_numbers = []
        hash['phone_numbers'].each do |structure|
          phone_numbers << (GetPhoneNumberResponse.from_hash(structure) if structure)
        end
      end

      phone_numbers = SKIP unless hash.key?('phone_numbers')
      name = hash.key?('name') ? hash['name'] : SKIP
      mother_name = hash.key?('mother_name') ? hash['mother_name'] : SKIP
      birthdate = hash.key?('birthdate') ? hash['birthdate'] : SKIP
      monthly_income =
        hash.key?('monthly_income') ? hash['monthly_income'] : SKIP
      professional_occupation =
        hash.key?('professional_occupation') ? hash['professional_occupation'] : SKIP
      address = GetRegisterInformationAddressResponse.from_hash(hash['address']) if
        hash['address']
      company_name = hash.key?('company_name') ? hash['company_name'] : SKIP
      trading_name = hash.key?('trading_name') ? hash['trading_name'] : SKIP
      annual_revenue =
        hash.key?('annual_revenue') ? hash['annual_revenue'] : SKIP
      corporation_type =
        hash.key?('corporation_type') ? hash['corporation_type'] : SKIP
      founding_date = hash.key?('founding_date') ? hash['founding_date'] : SKIP
      cnae = hash.key?('cnae') ? hash['cnae'] : SKIP
      main_address = GetRegisterInformationAddressResponse.from_hash(hash['main_address']) if
        hash['main_address']
      # Parameter is an array, so we need to iterate through it
      managing_partners = nil
      unless hash['managing_partners'].nil?
        managing_partners = []
        hash['managing_partners'].each do |structure|
          managing_partners << (GetManagingPartnerResponse.from_hash(structure) if structure)
        end
      end

      managing_partners = SKIP unless hash.key?('managing_partners')

      # Create object from extracted values.
      GetRegisterInformationResponse.new(email,
                                         document,
                                         type,
                                         site_url,
                                         phone_numbers,
                                         name,
                                         mother_name,
                                         birthdate,
                                         monthly_income,
                                         professional_occupation,
                                         address,
                                         company_name,
                                         trading_name,
                                         annual_revenue,
                                         corporation_type,
                                         founding_date,
                                         cnae,
                                         main_address,
                                         managing_partners)
    end
  end
end
