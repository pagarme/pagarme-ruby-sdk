# pagarme_api_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PagarmeApiSdk
  # Request object for RegisterInformation.
  class CreateRegisterInformationBaseRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :document

    # "individual" ou "corporation"
    # @return [String]
    attr_accessor :type

    # "individual" ou "corporation"
    # @return [String]
    attr_accessor :site_url

    # "individual" ou "corporation"
    # @return [Array[CreateRegisterInformationPhoneRequest]]
    attr_accessor :phone_numbers

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['email'] = 'email'
      @_hash['document'] = 'document'
      @_hash['type'] = 'type'
      @_hash['site_url'] = 'site_url'
      @_hash['phone_numbers'] = 'phone_numbers'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        site_url
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        site_url
      ]
    end

    def initialize(email = nil, document = nil, type = nil, phone_numbers = nil,
                   site_url = SKIP)
      @email = email
      @document = document
      @type = type
      @site_url = site_url unless site_url == SKIP
      @phone_numbers = phone_numbers
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      email = hash.key?('email') ? hash['email'] : nil
      document = hash.key?('document') ? hash['document'] : nil
      type = hash.key?('type') ? hash['type'] : nil
      # Parameter is an array, so we need to iterate through it
      phone_numbers = nil
      unless hash['phone_numbers'].nil?
        phone_numbers = []
        hash['phone_numbers'].each do |structure|
          phone_numbers << (CreateRegisterInformationPhoneRequest.from_hash(structure) if structure)
        end
      end

      phone_numbers = nil unless hash.key?('phone_numbers')
      site_url = hash.key?('site_url') ? hash['site_url'] : SKIP

      # Create object from extracted values.
      CreateRegisterInformationBaseRequest.new(email,
                                               document,
                                               type,
                                               phone_numbers,
                                               site_url)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} email: #{@email}, document: #{@document}, type: #{@type}, site_url:"\
      " #{@site_url}, phone_numbers: #{@phone_numbers}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} email: #{@email.inspect}, document: #{@document.inspect}, type:"\
      " #{@type.inspect}, site_url: #{@site_url.inspect}, phone_numbers:"\
      " #{@phone_numbers.inspect}>"
    end
  end
end
