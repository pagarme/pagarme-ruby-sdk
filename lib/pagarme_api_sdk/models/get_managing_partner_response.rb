# pagarme_api_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PagarmeApiSdk
  # Response object for getting an ManagingPartnerResponse
  class GetManagingPartnerResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :document

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :mother_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :birthdate

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :monthly_income

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :professional_occupation

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :self_declared_representative

    # TODO: Write general description for this method
    # @return [GetRegisterInformationAddressResponse]
    attr_accessor :address

    # TODO: Write general description for this method
    # @return [Array[GetPhoneNumberResponse]]
    attr_accessor :phone_numbers

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['name'] = 'name'
      @_hash['email'] = 'email'
      @_hash['document'] = 'document'
      @_hash['type'] = 'type'
      @_hash['mother_name'] = 'mother_name'
      @_hash['birthdate'] = 'birthdate'
      @_hash['monthly_income'] = 'monthly_income'
      @_hash['professional_occupation'] = 'professional_occupation'
      @_hash['self_declared_representative'] = 'self_declared_representative'
      @_hash['address'] = 'address'
      @_hash['phone_numbers'] = 'phone_numbers'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        name
        email
        document
        type
        mother_name
        birthdate
        monthly_income
        professional_occupation
        self_declared_representative
        address
        phone_numbers
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        name
        email
        document
        type
        mother_name
        birthdate
        monthly_income
        professional_occupation
        address
        phone_numbers
      ]
    end

    def initialize(name = SKIP, email = SKIP, document = SKIP, type = SKIP,
                   mother_name = SKIP, birthdate = SKIP, monthly_income = SKIP,
                   professional_occupation = SKIP,
                   self_declared_representative = SKIP, address = SKIP,
                   phone_numbers = SKIP)
      @name = name unless name == SKIP
      @email = email unless email == SKIP
      @document = document unless document == SKIP
      @type = type unless type == SKIP
      @mother_name = mother_name unless mother_name == SKIP
      @birthdate = birthdate unless birthdate == SKIP
      @monthly_income = monthly_income unless monthly_income == SKIP
      @professional_occupation = professional_occupation unless professional_occupation == SKIP
      unless self_declared_representative == SKIP
        @self_declared_representative =
          self_declared_representative
      end
      @address = address unless address == SKIP
      @phone_numbers = phone_numbers unless phone_numbers == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash.key?('name') ? hash['name'] : SKIP
      email = hash.key?('email') ? hash['email'] : SKIP
      document = hash.key?('document') ? hash['document'] : SKIP
      type = hash.key?('type') ? hash['type'] : SKIP
      mother_name = hash.key?('mother_name') ? hash['mother_name'] : SKIP
      birthdate = hash.key?('birthdate') ? hash['birthdate'] : SKIP
      monthly_income =
        hash.key?('monthly_income') ? hash['monthly_income'] : SKIP
      professional_occupation =
        hash.key?('professional_occupation') ? hash['professional_occupation'] : SKIP
      self_declared_representative =
        hash.key?('self_declared_representative') ? hash['self_declared_representative'] : SKIP
      address = GetRegisterInformationAddressResponse.from_hash(hash['address']) if
        hash['address']
      # Parameter is an array, so we need to iterate through it
      phone_numbers = nil
      unless hash['phone_numbers'].nil?
        phone_numbers = []
        hash['phone_numbers'].each do |structure|
          phone_numbers << (GetPhoneNumberResponse.from_hash(structure) if structure)
        end
      end

      phone_numbers = SKIP unless hash.key?('phone_numbers')

      # Create object from extracted values.
      GetManagingPartnerResponse.new(name,
                                     email,
                                     document,
                                     type,
                                     mother_name,
                                     birthdate,
                                     monthly_income,
                                     professional_occupation,
                                     self_declared_representative,
                                     address,
                                     phone_numbers)
    end
  end
end
