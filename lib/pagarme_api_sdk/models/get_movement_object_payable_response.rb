# pagarme_api_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'get_movement_object_base_response'

module PagarmeApiSdk
  # GetMovementObjectPayableResponse Model.
  class GetMovementObjectPayableResponse < GetMovementObjectBaseResponse
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :fee

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :anticipation_fee

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :fraud_coverage_fee

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :installment

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :split_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :bulk_anticipation_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :anticipation_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :recipient_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :originator_model

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :originator_model_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :payment_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :original_payment_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :payment_method

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :accrual_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :liquidation_arrangement_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['fee'] = 'fee'
      @_hash['anticipation_fee'] = 'anticipation_fee'
      @_hash['fraud_coverage_fee'] = 'fraud_coverage_fee'
      @_hash['installment'] = 'installment'
      @_hash['split_id'] = 'split_id'
      @_hash['bulk_anticipation_id'] = 'bulk_anticipation_id'
      @_hash['anticipation_id'] = 'anticipation_id'
      @_hash['recipient_id'] = 'recipient_id'
      @_hash['originator_model'] = 'originator_model'
      @_hash['originator_model_id'] = 'originator_model_id'
      @_hash['payment_date'] = 'payment_date'
      @_hash['original_payment_date'] = 'original_payment_date'
      @_hash['payment_method'] = 'payment_method'
      @_hash['accrual_at'] = 'accrual_at'
      @_hash['liquidation_arrangement_id'] = 'liquidation_arrangement_id'
      @_hash = super().merge(@_hash)
      @_hash
    end

    # An array for optional fields
    def self.optionals
      _arr = %w[
        fee
      ]
      (_arr << super()).flatten!
    end

    # An array for nullable fields
    def self.nullables
      _arr = %w[
        fee
      ]
      (_arr << super()).flatten!
    end

    def initialize(anticipation_fee = nil,
                   fraud_coverage_fee = nil,
                   installment = nil,
                   split_id = nil,
                   bulk_anticipation_id = nil,
                   anticipation_id = nil,
                   recipient_id = nil,
                   originator_model = nil,
                   originator_model_id = nil,
                   payment_date = nil,
                   original_payment_date = nil,
                   payment_method = nil,
                   accrual_at = nil,
                   liquidation_arrangement_id = nil,
                   fee = SKIP,
                   object = 'payable',
                   id = SKIP,
                   status = SKIP,
                   amount = SKIP,
                   created_at = SKIP,
                   type = SKIP,
                   charge_id = SKIP,
                   gateway_id = SKIP)
      @fee = fee unless fee == SKIP
      @anticipation_fee = anticipation_fee
      @fraud_coverage_fee = fraud_coverage_fee
      @installment = installment
      @split_id = split_id
      @bulk_anticipation_id = bulk_anticipation_id
      @anticipation_id = anticipation_id
      @recipient_id = recipient_id
      @originator_model = originator_model
      @originator_model_id = originator_model_id
      @payment_date = payment_date
      @original_payment_date = original_payment_date
      @payment_method = payment_method
      @accrual_at = accrual_at
      @liquidation_arrangement_id = liquidation_arrangement_id

      # Call the constructor of the base class
      super(object,
            id,
            status,
            amount,
            created_at,
            type,
            charge_id,
            gateway_id)
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      anticipation_fee =
        hash.key?('anticipation_fee') ? hash['anticipation_fee'] : nil
      fraud_coverage_fee =
        hash.key?('fraud_coverage_fee') ? hash['fraud_coverage_fee'] : nil
      installment = hash.key?('installment') ? hash['installment'] : nil
      split_id = hash.key?('split_id') ? hash['split_id'] : nil
      bulk_anticipation_id =
        hash.key?('bulk_anticipation_id') ? hash['bulk_anticipation_id'] : nil
      anticipation_id =
        hash.key?('anticipation_id') ? hash['anticipation_id'] : nil
      recipient_id = hash.key?('recipient_id') ? hash['recipient_id'] : nil
      originator_model =
        hash.key?('originator_model') ? hash['originator_model'] : nil
      originator_model_id =
        hash.key?('originator_model_id') ? hash['originator_model_id'] : nil
      payment_date = hash.key?('payment_date') ? hash['payment_date'] : nil
      original_payment_date =
        hash.key?('original_payment_date') ? hash['original_payment_date'] : nil
      payment_method =
        hash.key?('payment_method') ? hash['payment_method'] : nil
      accrual_at = hash.key?('accrual_at') ? hash['accrual_at'] : nil
      liquidation_arrangement_id =
        hash.key?('liquidation_arrangement_id') ? hash['liquidation_arrangement_id'] : nil
      fee = hash.key?('fee') ? hash['fee'] : SKIP
      object = hash['object'] ||= 'payable'
      id = hash.key?('id') ? hash['id'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      amount = hash.key?('amount') ? hash['amount'] : SKIP
      created_at = hash.key?('created_at') ? hash['created_at'] : SKIP
      type = hash.key?('type') ? hash['type'] : SKIP
      charge_id = hash.key?('charge_id') ? hash['charge_id'] : SKIP
      gateway_id = hash.key?('gateway_id') ? hash['gateway_id'] : SKIP

      # Create object from extracted values.
      GetMovementObjectPayableResponse.new(anticipation_fee,
                                           fraud_coverage_fee,
                                           installment,
                                           split_id,
                                           bulk_anticipation_id,
                                           anticipation_id,
                                           recipient_id,
                                           originator_model,
                                           originator_model_id,
                                           payment_date,
                                           original_payment_date,
                                           payment_method,
                                           accrual_at,
                                           liquidation_arrangement_id,
                                           fee,
                                           object,
                                           id,
                                           status,
                                           amount,
                                           created_at,
                                           type,
                                           charge_id,
                                           gateway_id)
    end
  end
end
