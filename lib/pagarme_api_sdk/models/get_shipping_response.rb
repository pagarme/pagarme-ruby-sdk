# pagarme_api_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module PagarmeApiSdk
  # Response object for getting the shipping data
  class GetShippingResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :recipient_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :recipient_phone

    # TODO: Write general description for this method
    # @return [GetAddressResponse]
    attr_accessor :address

    # Data mÃ¡xima de entrega
    # @return [DateTime]
    attr_accessor :max_delivery_date

    # Prazo estimado de entrega
    # @return [DateTime]
    attr_accessor :estimated_delivery_date

    # Shipping Type
    # @return [String]
    attr_accessor :type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['amount'] = 'amount'
      @_hash['description'] = 'description'
      @_hash['recipient_name'] = 'recipient_name'
      @_hash['recipient_phone'] = 'recipient_phone'
      @_hash['address'] = 'address'
      @_hash['max_delivery_date'] = 'max_delivery_date'
      @_hash['estimated_delivery_date'] = 'estimated_delivery_date'
      @_hash['type'] = 'type'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        amount
        description
        recipient_name
        recipient_phone
        address
        max_delivery_date
        estimated_delivery_date
        type
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        amount
        description
        recipient_name
        recipient_phone
        address
        max_delivery_date
        estimated_delivery_date
        type
      ]
    end

    def initialize(amount = SKIP,
                   description = SKIP,
                   recipient_name = SKIP,
                   recipient_phone = SKIP,
                   address = SKIP,
                   max_delivery_date = SKIP,
                   estimated_delivery_date = SKIP,
                   type = SKIP)
      @amount = amount unless amount == SKIP
      @description = description unless description == SKIP
      @recipient_name = recipient_name unless recipient_name == SKIP
      @recipient_phone = recipient_phone unless recipient_phone == SKIP
      @address = address unless address == SKIP
      @max_delivery_date = max_delivery_date unless max_delivery_date == SKIP
      @estimated_delivery_date = estimated_delivery_date unless estimated_delivery_date == SKIP
      @type = type unless type == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      amount = hash.key?('amount') ? hash['amount'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      recipient_name =
        hash.key?('recipient_name') ? hash['recipient_name'] : SKIP
      recipient_phone =
        hash.key?('recipient_phone') ? hash['recipient_phone'] : SKIP
      address = GetAddressResponse.from_hash(hash['address']) if hash['address']
      max_delivery_date = if hash.key?('max_delivery_date')
                            (DateTimeHelper.from_rfc3339(hash['max_delivery_date']) if hash['max_delivery_date'])
                          else
                            SKIP
                          end
      estimated_delivery_date = if hash.key?('estimated_delivery_date')
                                  (DateTimeHelper.from_rfc3339(hash['estimated_delivery_date']) if hash['estimated_delivery_date'])
                                else
                                  SKIP
                                end
      type = hash.key?('type') ? hash['type'] : SKIP

      # Create object from extracted values.
      GetShippingResponse.new(amount,
                              description,
                              recipient_name,
                              recipient_phone,
                              address,
                              max_delivery_date,
                              estimated_delivery_date,
                              type)
    end

    def to_max_delivery_date
      DateTimeHelper.to_rfc3339(max_delivery_date)
    end

    def to_estimated_delivery_date
      DateTimeHelper.to_rfc3339(estimated_delivery_date)
    end
  end
end
