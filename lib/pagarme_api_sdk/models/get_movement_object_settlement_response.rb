# pagarme_api_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'get_movement_object_base_response'

module PagarmeApiSdk
  # Generic response object for getting a MovementObjectSettlement.
  class GetMovementObjectSettlementResponse < GetMovementObjectBaseResponse
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :product

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :brand

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :payment_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :recipient_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :document_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :document

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :contract_obligation_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :liquidation_arrangement_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :external_engine_payment_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['product'] = 'product'
      @_hash['brand'] = 'brand'
      @_hash['payment_date'] = 'payment_date'
      @_hash['recipient_id'] = 'recipient_id'
      @_hash['document_type'] = 'document_type'
      @_hash['document'] = 'document'
      @_hash['contract_obligation_id'] = 'contract_obligation_id'
      @_hash['liquidation_arrangement_id'] = 'liquidation_arrangement_id'
      @_hash['external_engine_payment_id'] = 'external_engine_payment_id'
      @_hash = super().merge(@_hash)
      @_hash
    end

    # An array for optional fields
    def self.optionals
      _arr = %w[
        product
        brand
        payment_date
        recipient_id
        document_type
        document
        contract_obligation_id
        liquidation_arrangement_id
        external_engine_payment_id
      ]
      (_arr << super()).flatten!
    end

    # An array for nullable fields
    def self.nullables
      _arr = %w[
        product
        brand
        payment_date
        recipient_id
        document_type
        document
        contract_obligation_id
        liquidation_arrangement_id
        external_engine_payment_id
      ]
      (_arr << super()).flatten!
    end

    def initialize(product = SKIP, brand = SKIP, payment_date = SKIP,
                   recipient_id = SKIP, document_type = SKIP, document = SKIP,
                   contract_obligation_id = SKIP,
                   liquidation_arrangement_id = SKIP,
                   external_engine_payment_id = SKIP, object = 'settlement',
                   id = SKIP, status = SKIP, amount = SKIP, created_at = SKIP,
                   type = SKIP, charge_id = SKIP, gateway_id = SKIP)
      @product = product unless product == SKIP
      @brand = brand unless brand == SKIP
      @payment_date = payment_date unless payment_date == SKIP
      @recipient_id = recipient_id unless recipient_id == SKIP
      @document_type = document_type unless document_type == SKIP
      @document = document unless document == SKIP
      @contract_obligation_id = contract_obligation_id unless contract_obligation_id == SKIP
      unless liquidation_arrangement_id == SKIP
        @liquidation_arrangement_id =
          liquidation_arrangement_id
      end
      unless external_engine_payment_id == SKIP
        @external_engine_payment_id =
          external_engine_payment_id
      end

      # Call the constructor of the base class
      super(object,
            id,
            status,
            amount,
            created_at,
            type,
            charge_id,
            gateway_id)
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      product = hash.key?('product') ? hash['product'] : SKIP
      brand = hash.key?('brand') ? hash['brand'] : SKIP
      payment_date = hash.key?('payment_date') ? hash['payment_date'] : SKIP
      recipient_id = hash.key?('recipient_id') ? hash['recipient_id'] : SKIP
      document_type = hash.key?('document_type') ? hash['document_type'] : SKIP
      document = hash.key?('document') ? hash['document'] : SKIP
      contract_obligation_id =
        hash.key?('contract_obligation_id') ? hash['contract_obligation_id'] : SKIP
      liquidation_arrangement_id =
        hash.key?('liquidation_arrangement_id') ? hash['liquidation_arrangement_id'] : SKIP
      external_engine_payment_id =
        hash.key?('external_engine_payment_id') ? hash['external_engine_payment_id'] : SKIP
      object = hash['object'] ||= 'settlement'
      id = hash.key?('id') ? hash['id'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      amount = hash.key?('amount') ? hash['amount'] : SKIP
      created_at = hash.key?('created_at') ? hash['created_at'] : SKIP
      type = hash.key?('type') ? hash['type'] : SKIP
      charge_id = hash.key?('charge_id') ? hash['charge_id'] : SKIP
      gateway_id = hash.key?('gateway_id') ? hash['gateway_id'] : SKIP

      # Create object from extracted values.
      GetMovementObjectSettlementResponse.new(product,
                                              brand,
                                              payment_date,
                                              recipient_id,
                                              document_type,
                                              document,
                                              contract_obligation_id,
                                              liquidation_arrangement_id,
                                              external_engine_payment_id,
                                              object,
                                              id,
                                              status,
                                              amount,
                                              created_at,
                                              type,
                                              charge_id,
                                              gateway_id)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      super_string = super().sub(/^<[^ ]+ /, '').sub(/>$/, '')
      "<#{class_name} #{super_string}, product: #{@product}, brand: #{@brand}, payment_date:"\
      " #{@payment_date}, recipient_id: #{@recipient_id}, document_type: #{@document_type},"\
      " document: #{@document}, contract_obligation_id: #{@contract_obligation_id},"\
      " liquidation_arrangement_id: #{@liquidation_arrangement_id}, external_engine_payment_id:"\
      " #{@external_engine_payment_id}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      super_string = super().inspect.sub(/^<[^ ]+ /, '').sub(/>$/, '')
      "<#{class_name} #{super_string}, product: #{@product.inspect}, brand: #{@brand.inspect},"\
      " payment_date: #{@payment_date.inspect}, recipient_id: #{@recipient_id.inspect},"\
      " document_type: #{@document_type.inspect}, document: #{@document.inspect},"\
      " contract_obligation_id: #{@contract_obligation_id.inspect}, liquidation_arrangement_id:"\
      " #{@liquidation_arrangement_id.inspect}, external_engine_payment_id:"\
      " #{@external_engine_payment_id.inspect}>"
    end
  end
end
