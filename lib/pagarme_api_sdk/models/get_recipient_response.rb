# pagarme_api_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module PagarmeApiSdk
  # Recipient response
  class GetRecipientResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Id
    # @return [String]
    attr_accessor :id

    # Name
    # @return [String]
    attr_accessor :name

    # Email
    # @return [String]
    attr_accessor :email

    # Document
    # @return [String]
    attr_accessor :document

    # Description
    # @return [String]
    attr_accessor :description

    # Type
    # @return [String]
    attr_accessor :type

    # Status
    # @return [String]
    attr_accessor :status

    # Creation date
    # @return [DateTime]
    attr_accessor :created_at

    # Last update date
    # @return [DateTime]
    attr_accessor :updated_at

    # Deletion date
    # @return [DateTime]
    attr_accessor :deleted_at

    # Default bank account
    # @return [GetBankAccountResponse]
    attr_accessor :default_bank_account

    # Info about the recipient on the gateway
    # @return [List of GetGatewayRecipientResponse]
    attr_accessor :gateway_recipients

    # Metadata
    # @return [Hash of String]
    attr_accessor :metadata

    # Metadata
    # @return [GetAutomaticAnticipationResponse]
    attr_accessor :automatic_anticipation_settings

    # Metadata
    # @return [GetTransferSettingsResponse]
    attr_accessor :transfer_settings

    # Recipient code
    # @return [String]
    attr_accessor :code

    # Payment mode
    # @return [String]
    attr_accessor :payment_mode

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['name'] = 'name'
      @_hash['email'] = 'email'
      @_hash['document'] = 'document'
      @_hash['description'] = 'description'
      @_hash['type'] = 'type'
      @_hash['status'] = 'status'
      @_hash['created_at'] = 'created_at'
      @_hash['updated_at'] = 'updated_at'
      @_hash['deleted_at'] = 'deleted_at'
      @_hash['default_bank_account'] = 'default_bank_account'
      @_hash['gateway_recipients'] = 'gateway_recipients'
      @_hash['metadata'] = 'metadata'
      @_hash['automatic_anticipation_settings'] =
        'automatic_anticipation_settings'
      @_hash['transfer_settings'] = 'transfer_settings'
      @_hash['code'] = 'code'
      @_hash['payment_mode'] = 'payment_mode'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
        email
        document
        description
        type
        status
        created_at
        updated_at
        deleted_at
        default_bank_account
        gateway_recipients
        metadata
        automatic_anticipation_settings
        transfer_settings
        code
        payment_mode
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        id
        name
        email
        document
        description
        type
        status
        created_at
        updated_at
        deleted_at
        default_bank_account
        gateway_recipients
        metadata
        automatic_anticipation_settings
        transfer_settings
        code
        payment_mode
      ]
    end

    def initialize(id = SKIP,
                   name = SKIP,
                   email = SKIP,
                   document = SKIP,
                   description = SKIP,
                   type = SKIP,
                   status = SKIP,
                   created_at = SKIP,
                   updated_at = SKIP,
                   deleted_at = SKIP,
                   default_bank_account = SKIP,
                   gateway_recipients = SKIP,
                   metadata = SKIP,
                   automatic_anticipation_settings = SKIP,
                   transfer_settings = SKIP,
                   code = SKIP,
                   payment_mode = 'bank_transfer')
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @email = email unless email == SKIP
      @document = document unless document == SKIP
      @description = description unless description == SKIP
      @type = type unless type == SKIP
      @status = status unless status == SKIP
      @created_at = created_at unless created_at == SKIP
      @updated_at = updated_at unless updated_at == SKIP
      @deleted_at = deleted_at unless deleted_at == SKIP
      @default_bank_account = default_bank_account unless default_bank_account == SKIP
      @gateway_recipients = gateway_recipients unless gateway_recipients == SKIP
      @metadata = metadata unless metadata == SKIP
      unless automatic_anticipation_settings == SKIP
        @automatic_anticipation_settings =
          automatic_anticipation_settings
      end
      @transfer_settings = transfer_settings unless transfer_settings == SKIP
      @code = code unless code == SKIP
      @payment_mode = payment_mode unless payment_mode == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      email = hash.key?('email') ? hash['email'] : SKIP
      document = hash.key?('document') ? hash['document'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      type = hash.key?('type') ? hash['type'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      created_at = if hash.key?('created_at')
                     (DateTimeHelper.from_rfc3339(hash['created_at']) if hash['created_at'])
                   else
                     SKIP
                   end
      updated_at = if hash.key?('updated_at')
                     (DateTimeHelper.from_rfc3339(hash['updated_at']) if hash['updated_at'])
                   else
                     SKIP
                   end
      deleted_at = if hash.key?('deleted_at')
                     (DateTimeHelper.from_rfc3339(hash['deleted_at']) if hash['deleted_at'])
                   else
                     SKIP
                   end
      default_bank_account = GetBankAccountResponse.from_hash(hash['default_bank_account']) if
        hash['default_bank_account']
      # Parameter is an array, so we need to iterate through it
      gateway_recipients = nil
      unless hash['gateway_recipients'].nil?
        gateway_recipients = []
        hash['gateway_recipients'].each do |structure|
          gateway_recipients << (GetGatewayRecipientResponse.from_hash(structure) if structure)
        end
      end

      gateway_recipients = SKIP unless hash.key?('gateway_recipients')
      metadata = hash.key?('metadata') ? hash['metadata'] : SKIP
      if hash['automatic_anticipation_settings']
        automatic_anticipation_settings = GetAutomaticAnticipationResponse.from_hash(hash['automatic_anticipation_settings'])
      end
      transfer_settings = GetTransferSettingsResponse.from_hash(hash['transfer_settings']) if
        hash['transfer_settings']
      code = hash.key?('code') ? hash['code'] : SKIP
      payment_mode = hash['payment_mode'] ||= 'bank_transfer'

      # Create object from extracted values.
      GetRecipientResponse.new(id,
                               name,
                               email,
                               document,
                               description,
                               type,
                               status,
                               created_at,
                               updated_at,
                               deleted_at,
                               default_bank_account,
                               gateway_recipients,
                               metadata,
                               automatic_anticipation_settings,
                               transfer_settings,
                               code,
                               payment_mode)
    end

    def to_created_at
      DateTimeHelper.to_rfc3339(created_at)
    end

    def to_updated_at
      DateTimeHelper.to_rfc3339(updated_at)
    end

    def to_deleted_at
      DateTimeHelper.to_rfc3339(deleted_at)
    end
  end
end
